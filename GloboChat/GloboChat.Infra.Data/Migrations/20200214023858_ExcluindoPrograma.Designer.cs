// <auto-generated />
using System;
using GloboChat.Infra.Data.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GloboChat.Infra.Data.Migrations
{
    [DbContext(typeof(GloboChatContext))]
    [Migration("20200214023858_ExcluindoPrograma")]
    partial class ExcluindoPrograma
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GloboChat.Dominio.Entidades.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("loginId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("loginId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("GloboChat.Dominio.Entidades.Canal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Canais");
                });

            modelBuilder.Entity("GloboChat.Dominio.Entidades.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CanalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Final")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramaAtual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CanalId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("GloboChat.Dominio.Entidades.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nick")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nivelAcesso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("GloboChat.Dominio.Entidades.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNasc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("loginId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("loginId");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("GloboChat.Dominio.Entidades.SalaChat", b =>
                {
                    b.Property<int>("IdChat")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int");

                    b.HasKey("IdChat", "IdPessoa");

                    b.HasIndex("IdPessoa");

                    b.ToTable("SalasChat");
                });

            modelBuilder.Entity("GloboChat.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("pessoaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("pessoaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GloboChat.Dominio.Entidades.Admin", b =>
                {
                    b.HasOne("GloboChat.Dominio.Entidades.Login", "login")
                        .WithMany()
                        .HasForeignKey("loginId");
                });

            modelBuilder.Entity("GloboChat.Dominio.Entidades.Chat", b =>
                {
                    b.HasOne("GloboChat.Dominio.Entidades.Canal", null)
                        .WithMany("Chats")
                        .HasForeignKey("CanalId");
                });

            modelBuilder.Entity("GloboChat.Dominio.Entidades.Pessoa", b =>
                {
                    b.HasOne("GloboChat.Dominio.Entidades.Login", "login")
                        .WithMany()
                        .HasForeignKey("loginId");
                });

            modelBuilder.Entity("GloboChat.Dominio.Entidades.SalaChat", b =>
                {
                    b.HasOne("GloboChat.Dominio.Entidades.Chat", "Chat")
                        .WithMany("SalasChat")
                        .HasForeignKey("IdChat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GloboChat.Dominio.Entidades.Pessoa", "Pessoa")
                        .WithMany("SalasChat")
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GloboChat.Dominio.Entidades.Usuario", b =>
                {
                    b.HasOne("GloboChat.Dominio.Entidades.Pessoa", "pessoa")
                        .WithMany()
                        .HasForeignKey("pessoaId");
                });
#pragma warning restore 612, 618
        }
    }
}
